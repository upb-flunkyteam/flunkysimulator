# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import flunky_service_pb2 as flunky__service__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class FlunkyServiceStub(object):
  """A Flunkyball API.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Throw = channel.unary_unary(
        '/endpoints.flunky.simulator.FlunkyService/Throw',
        request_serializer=flunky__service__pb2.ThrowReq.SerializeToString,
        response_deserializer=flunky__service__pb2.ThrowResp.FromString,
        )
    self.Abgegeben = channel.unary_unary(
        '/endpoints.flunky.simulator.FlunkyService/Abgegeben',
        request_serializer=flunky__service__pb2.AbgegebenReq.SerializeToString,
        response_deserializer=flunky__service__pb2.AbgegebenResp.FromString,
        )
    self.ResetGame = channel.unary_unary(
        '/endpoints.flunky.simulator.FlunkyService/ResetGame',
        request_serializer=flunky__service__pb2.ResetGameReq.SerializeToString,
        response_deserializer=flunky__service__pb2.ResetGameResp.FromString,
        )
    self.SelectThrowingPlayer = channel.unary_unary(
        '/endpoints.flunky.simulator.FlunkyService/SelectThrowingPlayer',
        request_serializer=flunky__service__pb2.SelectThrowingPlayerReq.SerializeToString,
        response_deserializer=flunky__service__pb2.SelectThrowingPlayerResp.FromString,
        )
    self.ModifyStrafbierCount = channel.unary_unary(
        '/endpoints.flunky.simulator.FlunkyService/ModifyStrafbierCount',
        request_serializer=flunky__service__pb2.ModifyStrafbierCountReq.SerializeToString,
        response_deserializer=flunky__service__pb2.ModifyStrafbierCountResp.FromString,
        )
    self.SendMessage = channel.unary_unary(
        '/endpoints.flunky.simulator.FlunkyService/SendMessage',
        request_serializer=flunky__service__pb2.SendMessageReq.SerializeToString,
        response_deserializer=flunky__service__pb2.SendMessageResp.FromString,
        )
    self.StreamState = channel.unary_stream(
        '/endpoints.flunky.simulator.FlunkyService/StreamState',
        request_serializer=flunky__service__pb2.StreamStateReq.SerializeToString,
        response_deserializer=flunky__service__pb2.StreamStateResp.FromString,
        )
    self.StreamLog = channel.unary_stream(
        '/endpoints.flunky.simulator.FlunkyService/StreamLog',
        request_serializer=flunky__service__pb2.LogReq.SerializeToString,
        response_deserializer=flunky__service__pb2.LogResp.FromString,
        )
    self.HardReset = channel.unary_unary(
        '/endpoints.flunky.simulator.FlunkyService/HardReset',
        request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.SetRestingPeriod = channel.unary_unary(
        '/endpoints.flunky.simulator.FlunkyService/SetRestingPeriod',
        request_serializer=flunky__service__pb2.RestingPeriodReq.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.SetRoundPhase = channel.unary_unary(
        '/endpoints.flunky.simulator.FlunkyService/SetRoundPhase',
        request_serializer=flunky__service__pb2.RoundPhaseReq.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )


class FlunkyServiceServicer(object):
  """A Flunkyball API.
  """

  def Throw(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Abgegeben(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ResetGame(self, request, context):
    """resets Strafbier counter, Abgaben
    and plays prepare game clip afterwards
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SelectThrowingPlayer(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ModifyStrafbierCount(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SendMessage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamState(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StreamLog(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def HardReset(self, request, context):
    """Debug rpcs
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetRestingPeriod(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SetRoundPhase(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_FlunkyServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Throw': grpc.unary_unary_rpc_method_handler(
          servicer.Throw,
          request_deserializer=flunky__service__pb2.ThrowReq.FromString,
          response_serializer=flunky__service__pb2.ThrowResp.SerializeToString,
      ),
      'Abgegeben': grpc.unary_unary_rpc_method_handler(
          servicer.Abgegeben,
          request_deserializer=flunky__service__pb2.AbgegebenReq.FromString,
          response_serializer=flunky__service__pb2.AbgegebenResp.SerializeToString,
      ),
      'ResetGame': grpc.unary_unary_rpc_method_handler(
          servicer.ResetGame,
          request_deserializer=flunky__service__pb2.ResetGameReq.FromString,
          response_serializer=flunky__service__pb2.ResetGameResp.SerializeToString,
      ),
      'SelectThrowingPlayer': grpc.unary_unary_rpc_method_handler(
          servicer.SelectThrowingPlayer,
          request_deserializer=flunky__service__pb2.SelectThrowingPlayerReq.FromString,
          response_serializer=flunky__service__pb2.SelectThrowingPlayerResp.SerializeToString,
      ),
      'ModifyStrafbierCount': grpc.unary_unary_rpc_method_handler(
          servicer.ModifyStrafbierCount,
          request_deserializer=flunky__service__pb2.ModifyStrafbierCountReq.FromString,
          response_serializer=flunky__service__pb2.ModifyStrafbierCountResp.SerializeToString,
      ),
      'SendMessage': grpc.unary_unary_rpc_method_handler(
          servicer.SendMessage,
          request_deserializer=flunky__service__pb2.SendMessageReq.FromString,
          response_serializer=flunky__service__pb2.SendMessageResp.SerializeToString,
      ),
      'StreamState': grpc.unary_stream_rpc_method_handler(
          servicer.StreamState,
          request_deserializer=flunky__service__pb2.StreamStateReq.FromString,
          response_serializer=flunky__service__pb2.StreamStateResp.SerializeToString,
      ),
      'StreamLog': grpc.unary_stream_rpc_method_handler(
          servicer.StreamLog,
          request_deserializer=flunky__service__pb2.LogReq.FromString,
          response_serializer=flunky__service__pb2.LogResp.SerializeToString,
      ),
      'HardReset': grpc.unary_unary_rpc_method_handler(
          servicer.HardReset,
          request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'SetRestingPeriod': grpc.unary_unary_rpc_method_handler(
          servicer.SetRestingPeriod,
          request_deserializer=flunky__service__pb2.RestingPeriodReq.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'SetRoundPhase': grpc.unary_unary_rpc_method_handler(
          servicer.SetRoundPhase,
          request_deserializer=flunky__service__pb2.RoundPhaseReq.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'endpoints.flunky.simulator.FlunkyService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
