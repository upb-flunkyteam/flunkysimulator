# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import video_service_pb2 as video__service__pb2


class VideoServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.StreamVideoEvents = channel.unary_stream(
        '/endpoints.flunky.simulator.VideoService/StreamVideoEvents',
        request_serializer=video__service__pb2.StreamVideoEventsReq.SerializeToString,
        response_deserializer=video__service__pb2.StreamVideoEventsResp.FromString,
        )


class VideoServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def StreamVideoEvents(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_VideoServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'StreamVideoEvents': grpc.unary_stream_rpc_method_handler(
          servicer.StreamVideoEvents,
          request_deserializer=video__service__pb2.StreamVideoEventsReq.FromString,
          response_serializer=video__service__pb2.StreamVideoEventsResp.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'endpoints.flunky.simulator.VideoService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
